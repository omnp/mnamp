#pragma once

#include "math.h"
#include "filter.h"

enum class TwoPoleResponse {
    r1 = 1u, r2 = 2u, r3 = 3u, r4 = 4u, r5 = 5u, r6 = 6u, r7 = 7u, r8 = 8u, r9 = 9u,
    r10 = 10u, r11 = 11u, r12 = 12u, r13 = 13u, r14 = 14u, r15 = 15u, r16 = 16u,
};

template <typename type> struct TwoPole : public filter<type, TwoPole<type>>
{
private:
    type a[3];
    type b[3];
    type xs[3];
    type ys[2];
    type s;
public:
    explicit TwoPole() : a{0.0}, b{0.0}, xs{0.0}, ys{0.0} {
        b[0] = 1.0;
        setparams(TwoPoleResponse::r2);
    }
    type const pass() const {
        return s;
    }
    void process(type const x) {
        xs[2] = xs[1];
        xs[1] = xs[0];
        xs[0] = x;
        s = a[0] * xs[0] + a[1] * xs[1] + a[2] * xs[2] - b[1] * ys[0] - b[2] * ys[1];
        ys[1] = ys[0];
        ys[0] = s;
    }
    void setparams(const type k, const type q, const type sr) {
        setparams(TwoPoleResponse(sr / k));
    }
    void setparams(const TwoPoleResponse r) {
        switch (r) {
            case TwoPoleResponse::r16: {
                a[0] = 0.008442683113792803;
                a[1] = 0.016885366227585605;
                a[2] = 0.008442683113792803;
                b[0] = 1.0;
                b[1] = -1.7237741687386445;
                b[2] = 0.7575449011938157;
                break;
            }
            case TwoPoleResponse::r15: {
                a[0] = 0.009525750667228262;
                a[1] = 0.019051501334456523;
                a[2] = 0.009525750667228262;
                b[0] = 1.0;
                b[1] = -1.7055500490972768;
                b[2] = 0.7436530517661898;
                break;
            }
            case TwoPoleResponse::r14: {
                a[0] = 0.010831701928183264;
                a[1] = 0.021663403856366528;
                a[2] = 0.010831701928183264;
                b[0] = 1.0;
                b[1] = -1.6847625331886111;
                b[2] = 0.7280893409013443;
                break;
            }
            case TwoPoleResponse::r13: {
                a[0] = 0.012426275324637834;
                a[1] = 0.02485255064927567;
                a[2] = 0.012426275324637834;
                b[0] = 1.0;
                b[1] = -1.6608320657132043;
                b[2] = 0.7105371670117555;
                break;
            }
            case TwoPoleResponse::r12: {
                a[0] = 0.014401418980573148;
                a[1] = 0.028802837961146296;
                a[2] = 0.014401418980573148;
                b[0] = 1.0;
                b[1] = -1.6329907391512004;
                b[2] = 0.690596415073493;
                break;
            }
            case TwoPoleResponse::r11: {
                a[0] = 0.01688894893941645;
                a[1] = 0.0337778978788329;
                a[2] = 0.01688894893941645;
                b[0] = 1.0;
                b[1] = -1.6001992034551105;
                b[2] = 0.6677549992127763;
                break;
            }
            case TwoPoleResponse::r10: {
                a[0] = 0.02008333102602092;
                a[1] = 0.04016666205204184;
                a[2] = 0.02008333102602092;
                b[0] = 1.0;
                b[1] = -1.5610153912536877;
                b[2] = 0.6413487153577715;
                break;
            }
            case TwoPoleResponse::r9: {
                a[0] = 0.024281322591786555;
                a[1] = 0.04856264518357311;
                a[2] = 0.024281322591786555;
                b[0] = 1.0;
                b[1] = -1.5133789569215772;
                b[2] = 0.6105042472887233;
                break;
            }
            case TwoPoleResponse::r8: {
                a[0] = 0.02995452102890392;
                a[1] = 0.05990904205780784;
                a[2] = 0.02995452102890392;
                b[0] = 1.0;
                b[1] = -1.4542406161069188;
                b[2] = 0.5740587002225346;
                break;
            }
            case TwoPoleResponse::r7: {
                a[0] = 0.03789055226449622;
                a[1] = 0.07578110452899244;
                a[2] = 0.03789055226449622;
                b[0] = 1.0;
                b[1] = -1.3788879216003438;
                b[2] = 0.5304501306583288;
                break;
            }
            case TwoPoleResponse::r6: {
                a[0] = 0.04948983229757781;
                a[1] = 0.09897966459515561;
                a[2] = 0.04948983229757781;
                b[0] = 1.0;
                b[1] = -1.2796292195506773;
                b[2] = 0.47758854874098844;
                break;
            }
            case TwoPoleResponse::r5: {
                a[0] = 0.06745508395870334;
                a[1] = 0.13491016791740668;
                a[2] = 0.06745508395870334;
                b[0] = 1.0;
                b[1] = -1.1429772843080923;
                b[2] = 0.41279762014290533;
                break;
            }
            case TwoPoleResponse::r4: {
                a[0] = 0.09763076084032914;
                a[1] = 0.19526152168065827;
                a[2] = 0.09763076084032914;
                b[0] = 1.0;
                b[1] = -0.9428060277021066;
                b[2] = 0.3333290710634233;
                break;
            }
            case TwoPoleResponse::r3: {
                a[0] = 0.15505046098215597;
                a[1] = 0.31010092196431194;
                a[2] = 0.15505046098215597;
                b[0] = 1.0;
                b[1] = -0.620201843928624;
                b[2] = 0.2404036878572479;
                break;
            }
            case TwoPoleResponse::r2: {
                a[0] = 0.2928920553392428;
                a[1] = 0.5857841106784856;
                a[2] = 0.2928920553392428;
                b[0] = 1.0;
                b[1] = -1.3007020142696517e-16;
                b[2] = 0.17156822135697122;
                break;
            }
            default:
            case TwoPoleResponse::r1: {
                a[0] = 1.0;
                a[1] = 2.0;
                a[2] = 1.0;
                b[0] = 1.0;
                b[1] = 2.0;
                b[2] = 1.0;
                break;
            }
        }
    }
    void reset() {
        s = 0.0;
        ys[1] = ys[0] = 0.0;
        xs[2] = xs[1] = xs[0] = 0.0;
    }
};